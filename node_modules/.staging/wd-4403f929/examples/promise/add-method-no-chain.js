require('colors');
var chai = require("chai");
var chaiAsPromised = require("chai-as-promised");
chai.use(chaiAsPromised);
chai.should();

var wd;
try {
  wd = require('wd');
} catch( err ) {
  wd = require('../../lib/main');
}

// enables chai assertion chaining
chaiAsPromised.transferPromiseness = wd.transferPromiseness;

// add promise method
wd.addPromiseMethod(
  'elementByCssSelectorWhenReady',
  function(selector, timeout) {
  var browser = this;
  return browser
    .waitForElementByCssSelector(selector, timeout)
    .then(function() {
      return browser.elementByCssSelector(selector);
    });
  }
);

// DO NOT call rewrap after this, this would reset the PromiseChainWebdriver prototype

var browser = wd.promiseRemote();

// optional extra logging
browser.on('status', function(info) {
  console.log(info.cyan);
});
browse